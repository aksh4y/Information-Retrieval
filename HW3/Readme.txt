### Running the program ###

TASK 1
------------
Step 1) Find a machine with Python 2.7
Step 2) Ensure the source files from HW1 Task 1 are in the Source files folder
Step 3) Run the program using the python command (python, python2, py <- depending on environment setup) followed by task1.py
Step 4) Wait for the algorithm to generate the corpus.
Step 5) Find the relevant generated corpus in the Corpus folder

OPTIONAL: use the "-c" parameter while running the program to exclude case folding and punctuation removal

Example of running program with default case folding and punctuation removal:
python task1.py

Example of running program without case folding and punctuation removal:
python task1.py -c


TASK 2
------------
Step 1) Find a machine with Python 2.7
Step 2) Ensure the generated corpus from Task 1 exists in the Corpus folder
Step 3) Run the program using the python command (python, python2, py <- depending on environment setup) followed by indexer.py
Step 4) Wait for the algorithm to generate the inverted indexes and token counts
Step 5) Find the relevant files in the Index and Tokens folder


TASK 3
------------

Step 1) Find a machine with Python 2.7
Step 2) Ensure the generated corpus from Task 1 exists in the Corpus folder
Step 3) Run the program using the python command (python, python2, py <- depending on environment setup) followed by task3.py
Step 4) Wait for the algorithm to generate the TFs, DFs and Stoplist
Step 5) Find the relevant files in the TF and DF folder

Citation: Used scikit library and other tutorial to get TF and DF in dict (vs original set)

EXTRA
------------
The downloadFiles.py script reads the URLs in the urls_file.txt file generated by HW1 Task1 and downloads the source files


### Citations ###

Libraries: BeautifulSoup to remove HTML tags from source files
	tqdm to display progress of program
